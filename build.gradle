apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


repositories {
  mavenCentral()
  jcenter()
}

group = 'com.github.zourzouvillys'

version = 'master-SNAPSHOT'

sourceCompatibility = 9
targetCompatibility = 9

configurations {
}



sourceSets {

  spi {
    java {
      srcDirs 'spi/src/main/java'
    }
    compileClasspath += configurations.compileClasspath
  }
  
  api {
    java {
      srcDirs 'api/src/main/java'
    }
    compileClasspath += configurations.compileClasspath
  }
  
  acmePlugin {
    java {
      srcDirs 'plugins/acme-autocert/src/main/java'
    }
    compileClasspath += sourceSets.spi.output
    compileClasspath += configurations.compileClasspath
  }
  
  bouncycastlePlugin {
    java {
      srcDirs 'plugins/bouncycastle/src/main/java'
    }
    compileClasspath += sourceSets.spi.output
    compileClasspath += configurations.compileClasspath
  }
  
  // include the SPI
  main {
    java {
      srcDirs 'api/src/main/java'
      srcDirs 'spi/src/main/java'
    }
  }
}


jar {
  manifest {
    attributes ('Automatic-Module-Name': "zrz.webports")
  }  
  from sourceSets.main.output
  from sourceSets.spi.output
}     

task bouncycastlePluginJar(type: Jar) {
  baseName 'webports-bouncycastle-plugin'
  from sourceSets.bouncycastlePlugin.output
}

task acmePluginJar(type: Jar) {
  baseName 'webports-acme-plugin'
  from sourceSets.acmePlugin.output
}

task apiJar(type: Jar) {
  classifier 'api'
  from sourceSets.api.output
}


task spiJar(type: Jar) {
  classifier 'spi'
  from sourceSets.spi.output
}

dependencies {

  // shared libs
  implementation ('com.google.guava:guava:27.0-jre') {
    // ignore the dependencies
    transitive = false
  }
  
  implementation 'org.slf4j:slf4j-api:1.7.25'
  implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
  
  // main transports.
  api 'io.netty:netty-codec-http2:4.1.30.Final'
  api 'io.netty:netty-codec-http:4.1.30.Final'
  
  implementation 'io.netty:netty-handler:4.1.30.Final'
  implementation 'io.netty:netty-transport:4.1.30.Final'

  compileOnly 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.150'
  
  bouncycastlePluginImplementation 'org.bouncycastle:bcpkix-jdk15on:1.60'
  bouncycastlePluginImplementation 'org.bouncycastle:bcprov-jdk15on:1.60'

  acmePluginImplementation 'org.shredzone.acme4j:acme4j-client:2.3'
  acmePluginImplementation 'org.shredzone.acme4j:acme4j-utils:2.3'
    
  testImplementation  'junit:junit:4.12'
  testImplementation  'org.assertj:assertj-core:3.6.1'
  testImplementation  'ch.qos.logback:logback-classic:1.2.3'  
   
}

// --------------------------------------------------
// install
// --------------------------------------------------

/*
task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}
    
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

javadoc {
  title = "ZRZ WebPorts"
  failOnError = false
  options.addBooleanOption('html5', true)
}  
*/

artifacts {

  archives (jar)
  archives (apiJar)
  archives (spiJar)
  archives(acmePluginJar)
  archives(bouncycastlePluginJar)
  
//  bouncycastlePlugin   bouncycastlePluginJar
//  spi apiJar
  
//  archives sourcesJar
//  archives javadocJar
}


eclipse.classpath.plusConfigurations << configurations.acmePluginRuntimeClasspath
eclipse.classpath.plusConfigurations << configurations.bouncycastlePluginRuntimeClasspath


publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      //artifact jar
      artifact spiJar
      artifact apiJar
      artifactId = 'webports-core'
    }
    bouncycastlePlugin(MavenPublication) {
      artifact bouncycastlePluginJar
      artifactId = 'webports-plugin-bouncycastle'
    }
    acmePlugin(MavenPublication) {
      artifact acmePluginJar
      artifactId = 'webports-plugin-acme'
    }
  }
  repositories {
    maven {
            url = "$buildDir/repo"
        }
    }      
    
}




